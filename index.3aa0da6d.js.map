{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js","node_modules/@swc/helpers/esm/_sliced_to_array.js","node_modules/@swc/helpers/esm/_array_with_holes.js","node_modules/@swc/helpers/esm/_iterable_to_array_limit.js","node_modules/@swc/helpers/esm/_non_iterable_rest.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js","node_modules/@swc/helpers/esm/_array_like_to_array.js","node_modules/@swc/helpers/esm/_to_consumable_array.js","node_modules/@swc/helpers/esm/_array_without_holes.js","node_modules/@swc/helpers/esm/_iterable_to_array.js","node_modules/@swc/helpers/esm/_non_iterable_spread.js"],"sourcesContent":["(function () {\n\"use strict\";\nvar $3d28d7f1aac198f5$exports = {};\nfunction $8713978b2328d32b$export$71511d61b312f219(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$71511d61b312f219(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\nfunction $09cbfe85151ea6c6$export$71511d61b312f219(arr) {\n    if (Array.isArray(arr)) return arr;\n}\n\n\nfunction $8ca2848f896a6803$export$71511d61b312f219(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n    if (_i == null) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n    try {\n        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\n\n\nfunction $a0bc1859061deae1$export$71511d61b312f219() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\nfunction $c3b10a83b523f372$export$71511d61b312f219(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $d4f69c5c6c4654b1$export$71511d61b312f219(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n}\n\n\nfunction $efec029548ccee7f$export$71511d61b312f219(arr, i) {\n    return (0, $09cbfe85151ea6c6$export$71511d61b312f219)(arr) || (0, $8ca2848f896a6803$export$71511d61b312f219)(arr, i) || (0, $d4f69c5c6c4654b1$export$71511d61b312f219)(arr, i) || (0, $a0bc1859061deae1$export$71511d61b312f219)();\n}\n\n\n\nfunction $c50969dc1df61e8b$export$71511d61b312f219(arr) {\n    if (Array.isArray(arr)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(arr);\n}\n\n\nfunction $09c9f293d010c0e1$export$71511d61b312f219(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\n\nfunction $38c2d4931cb7a7c4$export$71511d61b312f219() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\n\nfunction $227c6742e0ff6f82$export$71511d61b312f219(arr) {\n    return (0, $c50969dc1df61e8b$export$71511d61b312f219)(arr) || (0, $09c9f293d010c0e1$export$71511d61b312f219)(arr) || (0, $d4f69c5c6c4654b1$export$71511d61b312f219)(arr) || (0, $38c2d4931cb7a7c4$export$71511d61b312f219)();\n}\n\n\n\"use strict\";\nvar $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    function Game() {\n        var initialState = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : Game.defaultState();\n        (0, $8713978b2328d32b$export$71511d61b312f219)(this, Game);\n        this.score = 0;\n        this.status = \"idle\";\n        this.initialState = this.cloneState(initialState);\n        this.state = this.cloneState(initialState);\n        this.size = initialState.length;\n    }\n    (0, $4fc75ccb937ab1df$export$71511d61b312f219)(Game, [\n        {\n            key: \"getScore\",\n            value: function getScore() {\n                return this.score;\n            }\n        },\n        {\n            key: \"getState\",\n            value: function getState() {\n                return this.state;\n            }\n        },\n        {\n            key: \"getStatus\",\n            value: function getStatus() {\n                return this.status;\n            }\n        },\n        {\n            key: \"start\",\n            value: function start() {\n                if (this.status === \"idle\") {\n                    this.status = \"playing\";\n                    this.addRandomTile();\n                    this.addRandomTile();\n                }\n            }\n        },\n        {\n            key: \"restart\",\n            value: function restart() {\n                this.state = this.cloneState(this.initialState);\n                this.score = 0;\n                this.status = \"idle\";\n            }\n        },\n        {\n            key: \"addRandomTile\",\n            value: function addRandomTile() {\n                var emptyTiles = this.getEmptyTiles();\n                if (emptyTiles.length > 0) {\n                    var randomIndex = Math.floor(Math.random() * emptyTiles.length);\n                    var _emptyTiles_randomIndex = (0, $efec029548ccee7f$export$71511d61b312f219)(emptyTiles[randomIndex], 2), row = _emptyTiles_randomIndex[0], col = _emptyTiles_randomIndex[1];\n                    this.state[row][col] = Math.random() < 0.9 ? 2 : 4;\n                }\n            }\n        },\n        {\n            key: \"move\",\n            value: function move(direction) {\n                if (this.status !== \"playing\") return;\n                var moveMade = this.performMove(direction);\n                if (moveMade) {\n                    this.addRandomTile();\n                    this.checkGameState();\n                }\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                this.move(\"right\");\n            }\n        },\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                this.move(\"left\");\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                this.move(\"up\");\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                this.move(\"down\");\n            }\n        },\n        {\n            key: \"hasEmptyCells\",\n            value: function hasEmptyCells() {\n                return this.getEmptyTiles().length > 0;\n            }\n        },\n        {\n            key: \"canCombine\",\n            value: function canCombine() {\n                for(var row = 0; row < this.size; row++)for(var col = 0; col < this.size; col++){\n                    var currentValue = this.state[row][col];\n                    if (col < this.size - 1 && currentValue === this.state[row][col + 1]) return true;\n                    if (row < this.size - 1 && currentValue === this.state[row + 1][col]) return true;\n                }\n                return false;\n            }\n        },\n        {\n            key: \"checkGameState\",\n            value: function checkGameState() {\n                var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n                try {\n                    for(var _iterator = this.state[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                        var row = _step.value;\n                        if (row.includes(2048)) {\n                            this.status = \"win\";\n                            return;\n                        }\n                    }\n                } catch (err) {\n                    _didIteratorError = true;\n                    _iteratorError = err;\n                } finally{\n                    try {\n                        if (!_iteratorNormalCompletion && _iterator.return != null) {\n                            _iterator.return();\n                        }\n                    } finally{\n                        if (_didIteratorError) {\n                            throw _iteratorError;\n                        }\n                    }\n                }\n                if (!this.hasEmptyCells() && !this.canCombine()) this.status = \"lose\";\n            }\n        },\n        {\n            key: \"performMove\",\n            value: function performMove(direction) {\n                var previousState = this.cloneState(this.state);\n                var newState = [];\n                var isVertical = direction === \"up\" || direction === \"down\";\n                var isReverse = direction === \"right\" || direction === \"down\";\n                var rows = isVertical ? this.transposeState(this.state) : this.state;\n                var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n                try {\n                    for(var _iterator = rows[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                        var row = _step.value;\n                        var line = isReverse ? (0, $227c6742e0ff6f82$export$71511d61b312f219)(row).reverse() : row;\n                        var combined = this.combineRow(line);\n                        var padded = this.padRow(combined);\n                        var final = isReverse ? padded.reverse() : padded;\n                        newState.push(final);\n                    }\n                } catch (err) {\n                    _didIteratorError = true;\n                    _iteratorError = err;\n                } finally{\n                    try {\n                        if (!_iteratorNormalCompletion && _iterator.return != null) {\n                            _iterator.return();\n                        }\n                    } finally{\n                        if (_didIteratorError) {\n                            throw _iteratorError;\n                        }\n                    }\n                }\n                this.state = isVertical ? this.transposeState(newState) : newState;\n                return !this.areStatesEqual(previousState, this.state);\n            }\n        },\n        {\n            key: \"combineRow\",\n            value: function combineRow(row) {\n                var combinedRow = [];\n                var numbers = row.filter(function(n) {\n                    return n !== 0;\n                });\n                for(var i = 0; i < numbers.length; i++)if (numbers[i] === numbers[i + 1]) {\n                    var merged = numbers[i] * 2;\n                    combinedRow.push(merged);\n                    this.score += merged;\n                    i++;\n                } else combinedRow.push(numbers[i]);\n                return combinedRow;\n            }\n        },\n        {\n            key: \"padRow\",\n            value: function padRow(row) {\n                return (0, $227c6742e0ff6f82$export$71511d61b312f219)(row).concat((0, $227c6742e0ff6f82$export$71511d61b312f219)(Array(this.size - row.length).fill(0)));\n            }\n        },\n        {\n            key: \"cloneState\",\n            value: function cloneState(state) {\n                return state.map(function(row) {\n                    return (0, $227c6742e0ff6f82$export$71511d61b312f219)(row);\n                });\n            }\n        },\n        {\n            key: \"areStatesEqual\",\n            value: function areStatesEqual(state1, state2) {\n                for(var row = 0; row < state1.length; row++)for(var col = 0; col < state1[row].length; col++){\n                    if (state1[row][col] !== state2[row][col]) return false;\n                }\n                return true;\n            }\n        },\n        {\n            key: \"transposeState\",\n            value: function transposeState(state) {\n                return state[0].map(function(_, colIndex) {\n                    return state.map(function(row) {\n                        return row[colIndex];\n                    });\n                });\n            }\n        },\n        {\n            key: \"getEmptyTiles\",\n            value: function getEmptyTiles() {\n                var emptyTiles = [];\n                for(var row = 0; row < this.size; row++){\n                    for(var col = 0; col < this.size; col++)if (this.state[row][col] === 0) emptyTiles.push([\n                        row,\n                        col\n                    ]);\n                }\n                return emptyTiles;\n            }\n        }\n    ], [\n        {\n            key: \"defaultState\",\n            value: function defaultState() {\n                return Array.from({\n                    length: 4\n                }, function() {\n                    return Array(4).fill(0);\n                });\n            }\n        }\n    ]);\n    return Game;\n}();\n$3d28d7f1aac198f5$exports = $3d28d7f1aac198f5$var$Game;\n\n\nvar $197cd56b15c33885$var$game = new $3d28d7f1aac198f5$exports();\nvar $197cd56b15c33885$var$cells = Array.from(document.querySelectorAll(\".field-cell\"));\nvar $197cd56b15c33885$var$buttonStart = document.querySelector(\".button.start\");\nvar $197cd56b15c33885$var$scoreElement = document.querySelector(\".game-score\");\nvar $197cd56b15c33885$var$messageWinElement = document.querySelector(\".message-win\");\nvar $197cd56b15c33885$var$messageLoseElement = document.querySelector(\".message-lose\");\nvar $197cd56b15c33885$var$messageStartElement = document.querySelector(\".message-start\");\nvar $197cd56b15c33885$var$keyActions = {\n    ArrowLeft: function() {\n        return $197cd56b15c33885$var$game.moveLeft();\n    },\n    ArrowRight: function() {\n        return $197cd56b15c33885$var$game.moveRight();\n    },\n    ArrowUp: function() {\n        return $197cd56b15c33885$var$game.moveUp();\n    },\n    ArrowDown: function() {\n        return $197cd56b15c33885$var$game.moveDown();\n    }\n};\nvar $197cd56b15c33885$var$handleKeyDown = function(e) {\n    if ($197cd56b15c33885$var$game.getStatus() !== \"playing\") return;\n    var action = $197cd56b15c33885$var$keyActions[e.key];\n    if (action) {\n        action();\n        $197cd56b15c33885$var$updateView();\n    }\n};\nvar $197cd56b15c33885$var$updateCellsView = function() {\n    var state = $197cd56b15c33885$var$game.getState().flat();\n    $197cd56b15c33885$var$cells.forEach(function(cell, index) {\n        var cellValue = state[index];\n        cell.className = \"field-cell\";\n        cell.textContent = cellValue || \"\";\n        if (cellValue) cell.classList.add(\"field-cell--\".concat(cellValue));\n    });\n};\nvar $197cd56b15c33885$var$updateScoreView = function() {\n    $197cd56b15c33885$var$scoreElement.textContent = $197cd56b15c33885$var$game.getScore();\n};\nvar $197cd56b15c33885$var$updateGameStatusView = function() {\n    var gameStatus = $197cd56b15c33885$var$game.getStatus();\n    if (gameStatus === \"win\") $197cd56b15c33885$var$messageWinElement.classList.remove(\"hidden\");\n    if (gameStatus === \"lose\") $197cd56b15c33885$var$messageLoseElement.classList.remove(\"hidden\");\n};\nvar $197cd56b15c33885$var$updateView = function() {\n    $197cd56b15c33885$var$updateCellsView();\n    $197cd56b15c33885$var$updateScoreView();\n    $197cd56b15c33885$var$updateGameStatusView();\n};\nvar $197cd56b15c33885$var$resetMessages = function() {\n    [\n        $197cd56b15c33885$var$messageWinElement,\n        $197cd56b15c33885$var$messageLoseElement,\n        $197cd56b15c33885$var$messageStartElement\n    ].forEach(function(msg) {\n        msg.classList.add(\"hidden\");\n    });\n};\nvar $197cd56b15c33885$var$startNewGame = function() {\n    if ($197cd56b15c33885$var$buttonStart.classList.contains(\"restart\")) $197cd56b15c33885$var$game.restart();\n    $197cd56b15c33885$var$game.start();\n    $197cd56b15c33885$var$resetMessages();\n    $197cd56b15c33885$var$updateView();\n    $197cd56b15c33885$var$buttonStart.textContent = \"Restart\";\n    $197cd56b15c33885$var$buttonStart.className = \"button restart\";\n};\ndocument.addEventListener(\"keydown\", $197cd56b15c33885$var$handleKeyDown);\n$197cd56b15c33885$var$buttonStart.addEventListener(\"click\", $197cd56b15c33885$var$startNewGame);\n\n})();\n//# sourceMappingURL=index.3aa0da6d.js.map\n","'use strict';\n\nconst Game = require('../modules/Game.class');\nconst game = new Game();\n\nconst cells = Array.from(document.querySelectorAll('.field-cell'));\nconst buttonStart = document.querySelector('.button.start');\nconst scoreElement = document.querySelector('.game-score');\nconst messageWinElement = document.querySelector('.message-win');\nconst messageLoseElement = document.querySelector('.message-lose');\nconst messageStartElement = document.querySelector('.message-start');\n\nconst keyActions = {\n  ArrowLeft: () => game.moveLeft(),\n  ArrowRight: () => game.moveRight(),\n  ArrowUp: () => game.moveUp(),\n  ArrowDown: () => game.moveDown(),\n};\n\nconst handleKeyDown = (e) => {\n  if (game.getStatus() !== 'playing') {\n    return;\n  }\n\n  const action = keyActions[e.key];\n\n  if (action) {\n    action();\n    updateView();\n  }\n};\n\nconst updateCellsView = () => {\n  const state = game.getState().flat();\n\n  cells.forEach((cell, index) => {\n    const cellValue = state[index];\n\n    cell.className = 'field-cell';\n    cell.textContent = cellValue || '';\n\n    if (cellValue) {\n      cell.classList.add(`field-cell--${cellValue}`);\n    }\n  });\n};\n\nconst updateScoreView = () => {\n  scoreElement.textContent = game.getScore();\n};\n\nconst updateGameStatusView = () => {\n  const gameStatus = game.getStatus();\n\n  if (gameStatus === 'win') {\n    messageWinElement.classList.remove('hidden');\n  }\n\n  if (gameStatus === 'lose') {\n    messageLoseElement.classList.remove('hidden');\n  }\n};\n\nconst updateView = () => {\n  updateCellsView();\n  updateScoreView();\n  updateGameStatusView();\n};\n\nconst resetMessages = () => {\n  [messageWinElement, messageLoseElement, messageStartElement].forEach(\n    (msg) => {\n      msg.classList.add('hidden');\n    },\n  );\n};\n\nconst startNewGame = () => {\n  if (buttonStart.classList.contains('restart')) {\n    game.restart();\n  }\n\n  game.start();\n  resetMessages();\n  updateView();\n  buttonStart.textContent = 'Restart';\n  buttonStart.className = 'button restart';\n};\n\ndocument.addEventListener('keydown', handleKeyDown);\nbuttonStart.addEventListener('click', startNewGame);\n","'use strict';\n\nclass Game {\n  constructor(initialState = Game.defaultState()) {\n    this.score = 0;\n    this.status = 'idle';\n    this.initialState = this.cloneState(initialState);\n    this.state = this.cloneState(initialState);\n    this.size = initialState.length;\n  }\n\n  static defaultState() {\n    return Array.from({ length: 4 }, () => Array(4).fill(0));\n  }\n\n  getScore() {\n    return this.score;\n  }\n\n  getState() {\n    return this.state;\n  }\n\n  getStatus() {\n    return this.status;\n  }\n\n  start() {\n    if (this.status === 'idle') {\n      this.status = 'playing';\n      this.addRandomTile();\n      this.addRandomTile();\n    }\n  }\n\n  restart() {\n    this.state = this.cloneState(this.initialState);\n    this.score = 0;\n    this.status = 'idle';\n  }\n\n  addRandomTile() {\n    const emptyTiles = this.getEmptyTiles();\n\n    if (emptyTiles.length > 0) {\n      const randomIndex = Math.floor(Math.random() * emptyTiles.length);\n      const [row, col] = emptyTiles[randomIndex];\n\n      this.state[row][col] = Math.random() < 0.9 ? 2 : 4;\n    }\n  }\n\n  move(direction) {\n    if (this.status !== 'playing') {\n      return;\n    }\n\n    const moveMade = this.performMove(direction);\n\n    if (moveMade) {\n      this.addRandomTile();\n      this.checkGameState();\n    }\n  }\n\n  moveRight() {\n    this.move('right');\n  }\n  moveLeft() {\n    this.move('left');\n  }\n  moveUp() {\n    this.move('up');\n  }\n  moveDown() {\n    this.move('down');\n  }\n\n  hasEmptyCells() {\n    return this.getEmptyTiles().length > 0;\n  }\n\n  canCombine() {\n    for (let row = 0; row < this.size; row++) {\n      for (let col = 0; col < this.size; col++) {\n        const currentValue = this.state[row][col];\n\n        if (col < this.size - 1 && currentValue === this.state[row][col + 1]) {\n          return true;\n        }\n\n        if (row < this.size - 1 && currentValue === this.state[row + 1][col]) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  checkGameState() {\n    for (const row of this.state) {\n      if (row.includes(2048)) {\n        this.status = 'win';\n\n        return;\n      }\n    }\n\n    if (!this.hasEmptyCells() && !this.canCombine()) {\n      this.status = 'lose';\n    }\n  }\n\n  performMove(direction) {\n    const previousState = this.cloneState(this.state);\n    const newState = [];\n\n    const isVertical = direction === 'up' || direction === 'down';\n    const isReverse = direction === 'right' || direction === 'down';\n\n    const rows = isVertical ? this.transposeState(this.state) : this.state;\n\n    for (const row of rows) {\n      const line = isReverse ? [...row].reverse() : row;\n      const combined = this.combineRow(line);\n      const padded = this.padRow(combined);\n      const final = isReverse ? padded.reverse() : padded;\n\n      newState.push(final);\n    }\n\n    this.state = isVertical ? this.transposeState(newState) : newState;\n\n    return !this.areStatesEqual(previousState, this.state);\n  }\n\n  combineRow(row) {\n    const combinedRow = [];\n    const numbers = row.filter((n) => n !== 0);\n\n    for (let i = 0; i < numbers.length; i++) {\n      if (numbers[i] === numbers[i + 1]) {\n        const merged = numbers[i] * 2;\n\n        combinedRow.push(merged);\n        this.score += merged;\n        i++;\n      } else {\n        combinedRow.push(numbers[i]);\n      }\n    }\n\n    return combinedRow;\n  }\n\n  padRow(row) {\n    return [...row, ...Array(this.size - row.length).fill(0)];\n  }\n\n  cloneState(state) {\n    return state.map((row) => [...row]);\n  }\n\n  areStatesEqual(state1, state2) {\n    for (let row = 0; row < state1.length; row++) {\n      for (let col = 0; col < state1[row].length; col++) {\n        if (state1[row][col] !== state2[row][col]) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  transposeState(state) {\n    return state[0].map((_, colIndex) => state.map((row) => row[colIndex]));\n  }\n\n  getEmptyTiles() {\n    const emptyTiles = [];\n\n    for (let row = 0; row < this.size; row++) {\n      for (let col = 0; col < this.size; col++) {\n        if (this.state[row][col] === 0) {\n          emptyTiles.push([row, col]);\n        }\n      }\n    }\n\n    return emptyTiles;\n  }\n}\n\nmodule.exports = Game;\n","function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","import { _ as _array_with_holes } from \"./_array_with_holes.js\";\nimport { _ as _iterable_to_array_limit } from \"./_iterable_to_array_limit.js\";\nimport { _ as _non_iterable_rest } from \"./_non_iterable_rest.js\";\nimport { _ as _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nfunction _sliced_to_array(arr, i) {\n    return _array_with_holes(arr) || _iterable_to_array_limit(arr, i) || _unsupported_iterable_to_array(arr, i) || _non_iterable_rest();\n}\nexport { _sliced_to_array as _ };\n","function _array_with_holes(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nexport { _array_with_holes as _ };\n","function _iterable_to_array_limit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n    if (_i == null) return;\n\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n\n    try {\n        for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally {\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally {\n            if (_d) throw _e;\n        }\n    }\n\n    return _arr;\n}\nexport { _iterable_to_array_limit as _ };\n","function _non_iterable_rest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_rest as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n","function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","import { _ as _array_without_holes } from \"./_array_without_holes.js\";\nimport { _ as _iterable_to_array } from \"./_iterable_to_array.js\";\nimport { _ as _non_iterable_spread } from \"./_non_iterable_spread.js\";\nimport { _ as _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nexport { _to_consumable_array as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nexport { _array_without_holes as _ };\n","function _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) {\n        return Array.from(iter);\n    }\n}\nexport { _iterable_to_array as _ };\n","function _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_spread as _ };\n"],"names":["$4fc75ccb937ab1df$var$_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","$c3b10a83b523f372$export$71511d61b312f219","arr","len","arr2","Array","$d4f69c5c6c4654b1$export$71511d61b312f219","o","minLen","n","prototype","toString","call","slice","constructor","name","from","test","$227c6742e0ff6f82$export$71511d61b312f219","isArray","iter","Symbol","iterator","TypeError","$197cd56b15c33885$var$game","protoProps","staticProps","Game","initialState","arguments","defaultState","instance","Constructor","score","status","cloneState","state","size","value","addRandomTile","emptyTiles","getEmptyTiles","randomIndex","Math","floor","random","_emptyTiles_randomIndex","_s","_e","_i","_arr","_n","_d","next","done","push","err","row","col","direction","performMove","checkGameState","move","currentValue","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","includes","return","hasEmptyCells","canCombine","previousState","newState","isVertical","isReverse","rows","transposeState","line","reverse","combined","combineRow","padded","padRow","final","areStatesEqual","combinedRow","numbers","filter","merged","concat","fill","map","state1","state2","_","colIndex","$197cd56b15c33885$var$cells","document","querySelectorAll","$197cd56b15c33885$var$buttonStart","querySelector","$197cd56b15c33885$var$scoreElement","$197cd56b15c33885$var$messageWinElement","$197cd56b15c33885$var$messageLoseElement","$197cd56b15c33885$var$messageStartElement","$197cd56b15c33885$var$keyActions","ArrowLeft","moveLeft","ArrowRight","moveRight","ArrowUp","moveUp","ArrowDown","moveDown","$197cd56b15c33885$var$updateCellsView","getState","flat","forEach","cell","index","cellValue","className","textContent","classList","add","$197cd56b15c33885$var$updateScoreView","getScore","$197cd56b15c33885$var$updateGameStatusView","gameStatus","getStatus","remove","$197cd56b15c33885$var$updateView","$197cd56b15c33885$var$resetMessages","msg","addEventListener","e","action","contains","restart","start"],"version":3,"file":"index.3aa0da6d.js.map"}